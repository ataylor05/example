import msal
import requests
from azure.identity import AuthorizationCodeCredential
import jwt

clientId = ""
clientSecret = ""
aadTenant = "5221c46c-b7b6-41e0-a534-78064848cd54"
authority = "https://login.microsoftonline.com/" + aadTenant
scope = ['https://graph.microsoft.com/.default']

def getAadAccessToken (clientId, clientSecret, authority, scope):
    app = msal.ConfidentialClientApplication(clientId, authority=authority, client_credential = clientSecret)
    accessToken = app.acquire_token_for_client(scopes=scope)
    if accessToken['access_token']:
        print('New access token retreived....')
        return accessToken['access_token']
    else:
        print('Error aquiring authorization token. Check your tenantID, clientID and clientSecret.')
        exit(1)

def msgraphGetRequest(resource, requestHeaders):
    results = requests.get(resource, headers=requestHeaders).json()
    return results

accessToken = getAadAccessToken(clientId, clientSecret, authority, scope)
requestHeaders = {'Authorization': 'Bearer ' + accessToken}
#credential = AuthorizationCodeCredential(accessToken)

resource = "https://graph.microsoft.com/v1.0/applications"
print(msgraphGetRequest(resource, requestHeaders))

#resource = "https://graph.microsoft.com/v1.0/servicePrincipals/028a446a-e196-45b2-8012-a03262b65122/ownedObjects"
#print(msgraphGetRequest(resource, requestHeaders))
